{"version":3,"sources":["components/TodoHeader.js","components/Todo.js","components/TodoList.js","components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoHeader","d","Date","day","getDay","month","getMonth","date","getDate","className","Todo","todo","removeTodo","toggleComplete","duration","easing","style","textDecoration","completed","color","icon","faCircle","onClick","id","border","task","faTrash","TodoList","todos","map","TodoForm","addTodo","useState","setTodo","onSubmit","e","preventDefault","trim","uuid","faPlus","name","type","placeholder","value","onChange","target","LOCAL_STORAGE_KEY","App","setTodos","useEffect","storeTodos","JSON","parse","localStorage","getItem","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4801f30c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoHeader(){\r\n\r\n  const d = new Date(),\r\n        weekDay = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\r\n        months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n  const day = weekDay[d.getDay()],\r\n        month = months[d.getMonth()],\r\n        date = d.getDate();\r\n\r\n    return(\r\n        <div className=\"header\">\r\n          <h2 className=\"date\">\r\n            {day + ', '} \r\n            {month +' '}\r\n            {date}\r\n          </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoHeader;","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Todo({todo, removeTodo, toggleComplete}){\r\n    \r\n    function handleRemoveClick(){\r\n        removeTodo(todo.id);\r\n    }\r\n\r\n    function handleToggleClick(){\r\n        toggleComplete(todo.id)\r\n    }\r\n\r\n    return(\r\n        <FlipMove duration={500} easing=\"ease-in-out\">\r\n            <li className=\"item\" \r\n                style={{textDecoration: todo.completed ? 'line-through' : null,\r\n                color: todo.completed ? 'rgb(172, 172, 172)' : null}}>\r\n                <FontAwesomeIcon icon={faCircle} className=\"circle-check\" \r\n                    onClick={handleToggleClick} \r\n                    style={{color: todo.completed ? 'yellowgreen' : null, \r\n                        border: todo.completed ? 'none' : null}}/>\r\n                <p className=\"text\">{todo.task}</p>\r\n                <FontAwesomeIcon icon={faTrash} className=\"delete\" onClick={handleRemoveClick} />\r\n            </li>\r\n        </FlipMove>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList({todos, removeTodo, toggleComplete}){\r\n\r\n    return(\r\n        <ul className=\"content\">\r\n          {todos.map( todo => (\r\n            <Todo \r\n              key={todo.id} \r\n              todo={todo} \r\n              removeTodo={removeTodo}\r\n              toggleComplete={toggleComplete}\r\n            />\r\n          ))}\r\n      </ul>\r\n    )\r\n}\r\n\r\n/* \r\n<li className=\"item\">\r\n  <p className=\"text\">{}todo.task</p>\r\n  <FontAwesomeIcon icon={faTrash} className=\"delete\"></FontAwesomeIcon>\r\n</li> \r\n*/\r\nexport default TodoList;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport uuid from 'react-uuid';\r\n\r\nfunction TodoForm({addTodo}){\r\n    const [todo, setTodo] = useState({\r\n        id: '',\r\n        task: '',\r\n        completed: false\r\n    });\r\n\r\n    function handleTaskInputChange(e){\r\n        setTodo({...todo, task: e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(todo.task.trim()){\r\n            addTodo({...todo, id:uuid()});\r\n            //Reset task input\r\n            setTodo({...todo, task: ''});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            <button className=\"add-todo\">\r\n                <FontAwesomeIcon icon={faPlus} className=\"add-icon\"></FontAwesomeIcon>\r\n            </button>\r\n            <input \r\n                name= \"task\" \r\n                type=\"text\" \r\n                placeholder=\"Add a todo\" \r\n                className=\"input\"\r\n                value={todo.task}\r\n                onChange={handleTaskInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport './media.css';\nimport TodoHeader from './components/TodoHeader';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\n\nconst LOCAL_STORAGE_KEY = 'react-todo-list-todos';\n\nfunction App(){\n  const [todos, setTodos] = useState([]);\n  //Store Todo to Local Storage\n  useEffect(() => {\n    const storeTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storeTodos){\n      setTodos(storeTodos)\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n  //Add Todo\n  function addTodo(todo){\n    setTodos([todo, ...todos]);\n  }\n  //Remove Todo\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  //Check if todo is complete\n  function toggleComplete(id){\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id){\n          return {\n            ...todo,\n            completed: !todo.completed\n          }\n        }\n        return todo;\n      })\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"todo_container\">\n        <TodoHeader />\n        <TodoList \n          todos={todos}\n          removeTodo = {removeTodo}\n          toggleComplete = {toggleComplete}\n        />\n        <TodoForm addTodo={addTodo}/>\n      </div>\n    </div>\n  );\n  \n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}